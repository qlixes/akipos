<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri" abstract="false" final="false" start="27" end="126">
  <file path="/opt/lampp/htdocs/news/vendor/jasny/http-message/src" file="Uri.php" realpath="/opt/lampp/htdocs/news/vendor/jasny/http-message/src/Uri.php" size="3783" time="2017-05-17T03:28:27+02:00" unixtime="1494984507" sha1="fb61459797e18614ce8e0527b55315ed8a9c60dc" relative="Uri.php"/>
  <docblock>
    <description compact="Value object representing a URI.">This interface is meant to represent URIs according to RFC 3986 and to
provide methods for most common operations. Additional functionality for
working with URIs can be provided on top of the interface or externally.
Its primary use is for HTTP requests, but may also be used in other
contexts.

Instances of this interface are considered immutable; all methods that
might change state are implementeded such that they retain the internal
state of the current instance and return an instance that contains the
changed state.

Typically the Host header will also be present in the request message.</description>
    <see value="http://www.php-fig.org/psr/psr-7/#3-5-psr-http-message-uriinterface"/>
    <see value="http://tools.ietf.org/html/rfc3986 (the URI specification)"/>
  </docblock>
  <implements full="Psr\Http\Message\UriInterface" namespace="Psr\Http\Message" name="UriInterface" unresolved="true"/>
  <uses full="Jasny\HttpMessage\Uri\Scheme" namespace="Jasny\HttpMessage\Uri" name="Scheme" start="29" end="29"/>
  <uses full="Jasny\HttpMessage\Uri\Authority" namespace="Jasny\HttpMessage\Uri" name="Authority" start="30" end="30"/>
  <uses full="Jasny\HttpMessage\Uri\UserInfo" namespace="Jasny\HttpMessage\Uri" name="UserInfo" start="31" end="31"/>
  <uses full="Jasny\HttpMessage\Uri\Host" namespace="Jasny\HttpMessage\Uri" name="Host" start="32" end="32"/>
  <uses full="Jasny\HttpMessage\Uri\Port" namespace="Jasny\HttpMessage\Uri" name="Port" start="33" end="33"/>
  <uses full="Jasny\HttpMessage\Uri\Path" namespace="Jasny\HttpMessage\Uri" name="Path" start="34" end="34"/>
  <uses full="Jasny\HttpMessage\Uri\Query" namespace="Jasny\HttpMessage\Uri" name="Query" start="35" end="35"/>
  <uses full="Jasny\HttpMessage\Uri\Fragment" namespace="Jasny\HttpMessage\Uri" name="Fragment" start="36" end="36"/>
  <constructor name="__construct" start="51" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Class constructor."/>
      <see value="http://php.net/parse_url"/>
      <param description="Full URI string or URI parts" type="object" variable="$uri">
        <type full="Jasny\HttpMessage\string|array" namespace="Jasny\HttpMessage" name="string|array"/>
      </param>
      <throws description="for an invalid uri." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="for unsupported or invalid schemes." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="for invalid username." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="for invalid hostnames." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="for invalid ports." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="for invalid paths." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="for invalid query strings." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="uri" byreference="false" type="{unknown}" default="NULL"/>
  </constructor>
  <method name="setUriParts" start="69" end="77" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Set the URI parts"/>
      <param type="array" variable="$parts"/>
    </docblock>
    <parameter name="parts" byreference="false" type="array"/>
  </method>
  <method name="getParts" start="84" end="87" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get all the parts of the uri"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="buildUri" start="95" end="113" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Build a uri from all the parts"/>
      <param type="array" variable="$parts"/>
      <return type="object">
        <type full="Jasny\HttpMessage\type" namespace="Jasny\HttpMessage" name="type"/>
      </return>
    </docblock>
    <parameter name="parts" byreference="false" type="array"/>
  </method>
  <method name="__toString" start="121" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the string representation as a URI reference."/>
      <see value="http://tools.ietf.org/html/rfc3986#section-4.1"/>
      <return type="string"/>
    </docblock>
  </method>
  <trait full="Jasny\HttpMessage\Uri\Scheme" namespace="Jasny\HttpMessage\Uri" name="Scheme">
    <member name="defaultPorts" default="" type="array" visibility="public" static="true" line="14">
      <docblock>
        <description compact="Default ports for supported schemes"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="scheme" default="''" type="string" visibility="protected" static="false" line="23">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <method name="isSupportedScheme" start="32" end="35" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if scheme is supported"/>
        <param type="string" variable="$scheme"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="scheme" byreference="false" type="{unknown}"/>
    </method>
    <method name="getDefaultPort" start="42" end="45" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the default port for the schema"/>
        <return type="object">
          <type full="Jasny\HttpMessage\Uri\int|null" namespace="Jasny\HttpMessage\Uri" name="int|null"/>
        </return>
      </docblock>
    </method>
    <method name="getScheme" start="54" end="57" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the scheme component of the URI."/>
        <see value="https://tools.ietf.org/html/rfc3986#section-3.1"/>
        <return description="The URI scheme." type="string"/>
      </docblock>
    </method>
    <method name="setScheme" start="65" end="74" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the scheme"/>
        <param type="string" variable="$scheme"/>
        <throws description="for invalid or unsupported schemes." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="scheme" byreference="false" type="{unknown}"/>
    </method>
    <method name="withScheme" start="85" end="91" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified scheme.">An empty scheme is equivalent to removing the scheme.</description>
        <param description="The scheme to use with the new instance." type="string" variable="$scheme"/>
        <return description="A new instance with the specified scheme." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
        <throws description="for invalid or unsupported schemes." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="scheme" byreference="false" type="{unknown}"/>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\Authority" namespace="Jasny\HttpMessage\Uri" name="Authority">
    <method name="getUserInfo" start="15" end="15" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the user information component of the URI."/>
        <return description="The URI user information, in &quot;username[:password]&quot; format." type="string"/>
      </docblock>
    </method>
    <method name="getHost" start="22" end="22" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the host component of the URI."/>
        <return description="The URI host." type="string"/>
      </docblock>
    </method>
    <method name="getPort" start="32" end="32" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the port component of the URI.">If a port is present, and it is non-standard for the current scheme,
this method will return it as an integer.</description>
        <return description="The URI port." type="object">
          <type full="Jasny\HttpMessage\Uri\null|int" namespace="Jasny\HttpMessage\Uri" name="null|int"/>
        </return>
      </docblock>
    </method>
    <method name="getAuthority" start="50" end="61" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the authority component of the URI.">The authority syntax of the URI is:

&lt;pre&gt;
[user-info@]host[:port]
&lt;/pre&gt;

If the port component is not set or is the standard port for the current
scheme, it will not be included.</description>
        <see value="https://tools.ietf.org/html/rfc3986#section-3.2"/>
        <return description="The URI authority, in &quot;[user-info@]host[:port]&quot; format." type="string"/>
      </docblock>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\UserInfo" namespace="Jasny\HttpMessage\Uri" name="UserInfo">
    <member name="user" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <member name="pass" visibility="protected" static="false" line="18">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <method name="isValidUsername" start="27" end="30" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if username is valid according to RFC 3986"/>
        <param type="string" variable="$user"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="user" byreference="false" type="{unknown}"/>
    </method>
    <method name="getUserInfo" start="42" end="49" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the user information component of the URI.">If a user is present in the URI, this will return that value;
additionally, if the password is also present, it will be appended to the
user value, with a colon (":") separating the values.</description>
        <return description="The URI user information, in &quot;username[:password]&quot; format." type="string"/>
      </docblock>
    </method>
    <method name="setUser" start="57" end="64" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the username"/>
        <param type="string" variable="$user"/>
        <throws description="for invalid username." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="user" byreference="false" type="{unknown}"/>
    </method>
    <method name="setPass" start="71" end="74" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the password"/>
        <param type="string" variable="$password"/>
      </docblock>
      <parameter name="password" byreference="false" type="{unknown}"/>
    </method>
    <method name="withUserInfo" start="84" end="91" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified user information."/>
        <param description="The user name to use for authority." type="string" variable="$user"/>
        <param description="The password associated with $user." type="object" variable="$password">
          <type full="Jasny\HttpMessage\Uri\null|string" namespace="Jasny\HttpMessage\Uri" name="null|string"/>
        </param>
        <return description="A new instance with the specified user information." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
        <throws description="for invalid username." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="user" byreference="false" type="{unknown}"/>
      <parameter name="password" byreference="false" type="{unknown}" default="NULL"/>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\Host" namespace="Jasny\HttpMessage\Uri" name="Host">
    <member name="host" default="''" type="string" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <method name="isValidDomain" start="21" end="27" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the hostname is valid a valid domain name according to RFC 3986 and RFC 1123"/>
        <param type="string" variable="$hostname"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="hostname" byreference="false" type="{unknown}"/>
    </method>
    <method name="isValidIpv4" start="35" end="41" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the hostname is a valid IPv4 address"/>
        <param type="string" variable="$hostname"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="hostname" byreference="false" type="{unknown}"/>
    </method>
    <method name="isValidIpv6" start="49" end="53" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the hostname is a valid IPv6 address, including square brackets"/>
        <param type="string" variable="$hostname"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="hostname" byreference="false" type="{unknown}"/>
    </method>
    <method name="getHost" start="62" end="65" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the host component of the URI."/>
        <see value="http://tools.ietf.org/html/rfc3986#section-3.2.2"/>
        <return description="The URI host." type="string"/>
      </docblock>
    </method>
    <method name="setHost" start="72" end="81" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the host"/>
        <param type="string" variable="$host"/>
      </docblock>
      <parameter name="host" byreference="false" type="{unknown}"/>
    </method>
    <method name="withHost" start="92" end="98" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified host.">An empty host value is equivalent to removing the host.</description>
        <param description="The hostname to use with the new instance." type="string" variable="$host"/>
        <return description="A new instance with the specified host." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
        <throws description="for invalid hostnames." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="host" byreference="false" type="{unknown}"/>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\Port" namespace="Jasny\HttpMessage\Uri" name="Port">
    <member name="port" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="int"/>
      </docblock>
    </member>
    <method name="isValidPort" start="21" end="24" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the port is in the valid range"/>
        <param type="int" variable="$port"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="port" byreference="false" type="{unknown}"/>
    </method>
    <method name="getDefaultPort" start="31" end="31" abstract="true" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the default port for the scheme"/>
        <return type="object">
          <type full="Jasny\HttpMessage\Uri\int|null" namespace="Jasny\HttpMessage\Uri" name="int|null"/>
        </return>
      </docblock>
    </method>
    <method name="getPort" start="42" end="45" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the port component of the URI.">If a port is present, and it is non-standard for the current scheme,
this method will return it as an integer.</description>
        <return description="The URI port." type="object">
          <type full="Jasny\HttpMessage\Uri\null|int" namespace="Jasny\HttpMessage\Uri" name="null|int"/>
        </return>
      </docblock>
    </method>
    <method name="setPort" start="52" end="59" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the port"/>
        <param type="object" variable="$port">
          <type full="Jasny\HttpMessage\Uri\int|null" namespace="Jasny\HttpMessage\Uri" name="int|null"/>
        </param>
      </docblock>
      <parameter name="port" byreference="false" type="{unknown}"/>
    </method>
    <method name="withPort" start="72" end="78" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified port.">A null value provided for the port is equivalent to removing the port
information.</description>
        <param description="The port to use with the new instance; a null value" type="object" variable="$port">removes the port information.<type full="Jasny\HttpMessage\Uri\null|int" namespace="Jasny\HttpMessage\Uri" name="null|int"/></param>
        <return description="A new instance with the specified port." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
        <throws description="for invalid ports." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="port" byreference="false" type="{unknown}"/>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\Path" namespace="Jasny\HttpMessage\Uri" name="Path">
    <member name="path" default="''" type="string" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <method name="isValidPath" start="21" end="27" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the path is valid according to RFC 3986 section 3.3"/>
        <param type="string" variable="$path"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="path" byreference="false" type="{unknown}"/>
    </method>
    <method name="getPath" start="37" end="40" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the path component of the URI."/>
        <see value="https://tools.ietf.org/html/rfc3986#section-2"/>
        <see value="https://tools.ietf.org/html/rfc3986#section-3.3"/>
        <return description="The URI path." type="string"/>
      </docblock>
    </method>
    <method name="setPath" start="47" end="54" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the path"/>
        <param type="string" variable="$path"/>
      </docblock>
      <parameter name="path" byreference="false" type="{unknown}"/>
    </method>
    <method name="withPath" start="71" end="77" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified path.">The path can either be empty or absolute (starting with a slash) or
rootless (not starting with a slash).

If an HTTP path is intended to be host-relative rather than path-relative
then it must begin with a slash ("/"). HTTP paths not starting with a slash
are assumed to be relative to some base path known to the application or
consumer.</description>
        <param description="The path to use with the new instance." type="string" variable="$path"/>
        <return description="A new instance with the specified path." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
        <throws description="for invalid paths." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="path" byreference="false" type="{unknown}"/>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\Query" namespace="Jasny\HttpMessage\Uri" name="Query">
    <member name="query" default="''" type="string" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <method name="isValidQuery" start="21" end="24" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the query string is valid according to RFC 3986 section 3.4"/>
        <param type="string" variable="$query"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="query" byreference="false" type="{unknown}"/>
    </method>
    <method name="getQuery" start="35" end="38" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the query string of the URI.">The value returned will be percent-encoded.</description>
        <see value="https://tools.ietf.org/html/rfc3986#section-2"/>
        <see value="https://tools.ietf.org/html/rfc3986#section-3.4"/>
        <return description="The URI query string." type="string"/>
      </docblock>
    </method>
    <method name="setQuery" start="45" end="56" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the query"/>
        <param type="object" variable="$query">
          <type full="Jasny\HttpMessage\Uri\string|array" namespace="Jasny\HttpMessage\Uri" name="string|array"/>
        </param>
      </docblock>
      <parameter name="query" byreference="false" type="{unknown}"/>
    </method>
    <method name="withQuery" start="67" end="73" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified query string.">An empty query string value is equivalent to removing the query string.</description>
        <param description="The query string to use with the new instance." type="object" variable="$query">
          <type full="Jasny\HttpMessage\Uri\string|array" namespace="Jasny\HttpMessage\Uri" name="string|array"/>
        </param>
        <return description="A new instance with the specified query string." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
        <throws description="for invalid query strings." type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="query" byreference="false" type="{unknown}"/>
    </method>
  </trait>
  <trait full="Jasny\HttpMessage\Uri\Fragment" namespace="Jasny\HttpMessage\Uri" name="Fragment">
    <member name="fragment" default="''" type="string" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="string"/>
      </docblock>
    </member>
    <method name="isValidFragment" start="21" end="24" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check if the fragment is valid according to RFC 3986 section 3.5"/>
        <param type="string" variable="$fragment"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="fragment" byreference="false" type="{unknown}"/>
    </method>
    <method name="getFragment" start="35" end="38" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the fragment component of the URI.">The value returned will be percent-encoded.</description>
        <see value="https://tools.ietf.org/html/rfc3986#section-2"/>
        <see value="https://tools.ietf.org/html/rfc3986#section-3.5"/>
        <return description="The URI fragment." type="string"/>
      </docblock>
    </method>
    <method name="setFragment" start="45" end="52" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set the fragment"/>
        <param type="string" variable="$fragment"/>
      </docblock>
      <parameter name="fragment" byreference="false" type="{unknown}"/>
    </method>
    <method name="withFragment" start="62" end="68" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return an instance with the specified URI fragment.">An empty fragment value is equivalent to removing the fragment.</description>
        <param description="The fragment to use with the new instance." type="string" variable="$fragment"/>
        <return description="A new instance with the specified fragment." resolution="static" type="object">
          <type full="Jasny\HttpMessage\Uri" namespace="Jasny\HttpMessage" name="Uri"/>
        </return>
      </docblock>
      <parameter name="fragment" byreference="false" type="{unknown}"/>
    </method>
  </trait>
</class>
